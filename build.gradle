buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.1.+'
    }
}

apply plugin: 'kotlin'
kotlin {
    experimental {
        coroutines 'enable'
    }
}

repositories {
    jcenter()
    mavenCentral()
}

dependencies {
    compile 'org.jetbrains.kotlin:kotlin-stdlib:1.1.+'
    // For Break_OO_privacy.kt and Reflection-List_properties.kt
    compile 'org.jetbrains.kotlin:kotlin-reflect:1.1.+'
    // For scripts/PullFromRosettaCode.kt
    compile 'khttp:khttp:0.1.+'
    compile 'com.thoughtworks.xstream:xstream:1.4.+'
    // For Active_Directory-Connect.kt
    compile 'org.apache.directory.api:api-all:1.0.+'
    // For Bernoulli_numbers.kt
    compile 'org.apache.commons:commons-math3:3.3'
    // For RIPEMD-160.kt
    compile 'org.bouncycastle:bcprov-jdk15on:1.55'
    testCompile 'io.kotlintest:kotlintest:1.3.7'
}

sourceSets {
    main.java.srcDirs += 'src'
    test.java.srcDirs += 'test'
}

/*
task compileDownload(type: KotlinCompile) {
    source = sourceSets.main.java.srcDirs
    include 'scripts/PullFromRosettaCode.kt'
    classpath = sourceSets.main.compileClasspath
    destinationDir = sourceSets.main.output.classesDir
}
*/

task pull(type: JavaExec, dependsOn: 'classes') {
    main = 'scripts.PullFromRosettaCodeKt'
    classpath = sourceSets.main.runtimeClasspath
}

task pullDirty(type: JavaExec, dependsOn: 'classes') {
    main = 'scripts.PullFromRosettaCodeDirtyKt'
    classpath = sourceSets.main.runtimeClasspath
}

task push(type: JavaExec, dependsOn: 'classes') {
    main = 'scripts.PushToRosettaCodeKt'
    classpath = sourceSets.main.runtimeClasspath
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.2.1'
}

defaultTasks 'classes'
